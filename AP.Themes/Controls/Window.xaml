<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:AP.Themes.Converters">

    <converters:IconSizeConverter x:Key="IconSizeConverter" />
    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="42" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource WindowButtonForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource WindowButtonBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter x:Name="PART_ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Content="{TemplateBinding Content}"
                              SnapsToDevicePixels="True" />
                    </Border>
                    <!--<ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
              <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.25" />
            </DataTrigger>
          </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource WindowInactiveForegroundBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonHoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonPressedBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowButtonPressedForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowCloseButtonHoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowCloseButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowCloseButtonPressedBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowCloseButtonPressedForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome GlassFrameThickness="0,0,0,1"
                      ResizeBorderThickness="5"
                      CaptionHeight="23"
                      CornerRadius="0" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Grid>
                        <AdornerDecorator>
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                      BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                                                <Setter Property="Margin" Value="7" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid UseLayoutRounding="True"
                        Background="{DynamicResource WindowTitleBackgroundBrush}"
                        x:Name="PART_Title">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="PART_Icon"
                           Source="{TemplateBinding Icon, Converter={StaticResource IconSizeConverter}, ConverterParameter=48}"
                           Height="20"
                           Margin="7,2,0,2"/>
                                        <TextBlock x:Name="PART_TitleText"
                               Grid.Column="1"
                               Text="{TemplateBinding Title}"
                               Margin="7,5"
                               FontSize="{x:Static SystemFonts.CaptionFontSize}"
                               Foreground="{DynamicResource WindowTitleForegroundBrush}"
                               VerticalAlignment="Center"
                               TextTrimming="CharacterEllipsis"/>
                                        <StackPanel Grid.Column="2"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Orientation="Horizontal"
                                VerticalAlignment="Top">
                                            <StackPanel.Resources>
                                                <Style TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}" />
                                            </StackPanel.Resources>
                                            <Button x:Name="PART_Min"
                              Command="{DXCommand Execute='$SystemCommands.MinimizeWindow(@FindAncestor($Window))'}">
                                                <Path Data="M 0,8.5 H 9"
                              Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                              RenderOptions.EdgeMode="Aliased" />
                                            </Button>
                                            <Button x:Name="PART_Max"
                              Command="{DXCommand Execute='$SystemCommands.MaximizeWindow(@FindAncestor($Window))'}">
                                                <Path Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                              RenderOptions.EdgeMode="Aliased">
                                                    <Path.Style>
                                                        <Style TargetType="Path">
                                                            <Setter Property="Data" Value="M 0.5,0.5 h 8.5 v 8.5 h -8.5 z" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                                                                    <Setter Property="Data" Value="M 0.5,2.5 h 6.5 v 6.5 h -6.5 z M 2.5,2.5 V 0 h 6.5 v 6.5 h -2" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Button>
                                            <Button x:Name="PART_Close"
                              Style="{StaticResource WindowCloseButtonStyle}"
                              Command="{DXCommand Execute='$SystemCommands.CloseWindow(@FindAncestor($Window))'}">
                                                <Path Data="M 0,0 L 9,9 M 0,9 L 9,0"
                              Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                    <Border Grid.Row="1"
                          Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </Grid>
                            </Border>
                        </AdornerDecorator>
                        <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Visibility="Collapsed"
                        IsTabStop="false" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_TitleText" Property="Foreground" Value="{DynamicResource WindowInactiveForegroundBrush}" />
                            <Setter TargetName="PART_Title" Property="Background" Value="{DynamicResource WindowInactiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource WindowInactiveBorderBrush}" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="PART_Max" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="PART_Max" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Min" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_Max" Property="Command" Value="{DXCommand Execute='$SystemCommands.RestoreWindow(@TemplatedParent)'}" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>