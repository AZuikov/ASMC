<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Separator.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator" BasedOn="{StaticResource MenuItemSeparatorStyle}" />

    <Style x:Key="DefaultMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=MenuBase}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border"
                  Background="{DynamicResource MenuItemBackgroundBrush}"
                  BorderBrush="{DynamicResource MenuItemBorderBrush}" 
                  BorderThickness="0.7"
                  UseLayoutRounding="True">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0"
                                  MinWidth="17"
                                  Width="Auto" 
                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3"
                                  Width="14"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                x:Name="Icon"
                                VerticalAlignment="Center" 
                                ContentSource="Icon"
                                Margin="2,0,0,0"/>
                            <Path Grid.Column="0"
                    x:Name="CheckGlyph"
                    Data="M0,2.5L2.5,5 7,0.5"
                    StrokeThickness="1"
                    Stroke="{TemplateBinding Foreground}"
                    HorizontalAlignment="Center"        
                    VerticalAlignment="Center"
                    Visibility="Collapsed"/>
                            <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}" 
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True" 
                                ContentSource="Header"
                                VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="2"
                                Margin="8,1"
                                x:Name="IGTHost" 
                                ContentSource="InputGestureText"
                                VerticalAlignment="Center"/>

                            <Grid Grid.Column="3"
                    Margin="4,0,6,0"
                    x:Name="ArrowPanel"
                    VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center" 
                      Fill="{TemplateBinding Foreground}"
                      Data="M 0,0 L 0,8 L 4,4 z"/>
                            </Grid>
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                     Placement="Right"
                     HorizontalOffset="-0.7"
                     x:Name="SubMenuPopup"
                     Focusable="false"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                     AllowsTransparency="True"
                     UseLayoutRounding="True">
                                <Grid Margin="0,0,5,5">
                                    <Border x:Name="SubMenuBorder" 
                          BorderBrush="{DynamicResource ContextMenuBorderBrush}"
                          BorderThickness="0.7"
                          Background="{DynamicResource ContextMenuBackgroundBrush}" 
                          SnapsToDevicePixels="True">
                                        <Grid x:Name="SubMenu"
                            Grid.IsSharedSizeScope="True"
                            Margin="1">
                                            <StackPanel IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="2"
                                        Color="{DynamicResource ContextMenuShadowColor}"/>
                                        </Border.Effect>
                                    </Border>
                                    <Border Margin="0.7,0"
                          x:Name="TransitionBorder"
                          Width="0"
                          Height="1" 
                          VerticalAlignment="Top"
                          HorizontalAlignment="Left" 
                          Background="{DynamicResource ContextMenuBackgroundBrush}"
                          SnapsToDevicePixels="False"
                          BorderThickness="0" />
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,2"/>
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                            <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="0.7"/>
                            <Setter TargetName="SubMenu" Property="Margin" Value="1"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0.7"/>
                            <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,2"/>
                            <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                            <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,0,0,0"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="21"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContextMenuBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,0,0,0"/>
                            <Setter TargetName="Border" Property="MinHeight" Value="21"/>
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContextMenuBackgroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHoverBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuItemHoverBorderBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="Role" Value="TopLevelItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHoverBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuItemHoverBorderBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="Role" Value="SubmenuHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHoverBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuItemHoverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="Role" Value="SubmenuItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHoverBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuItemHoverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="True"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContextMenuBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ContextMenuBorderBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="0.7,0.7,0.7,0"/>
                        </MultiTrigger>
                        <!--<Trigger Property="IsSubmenuOpen" Value="True">
              <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource BackgroundSelected}"/>
            </Trigger>-->
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="CheckGlyph" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="HeaderHost" Value="0.25" />
                            <Setter Property="Opacity" TargetName="Icon" Value="0.25" />
                            <Setter Property="Opacity" TargetName="IGTHost" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>