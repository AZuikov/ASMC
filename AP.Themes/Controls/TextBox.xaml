<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:AP.Themes.Converters">
    <converters:Thickness3DConverter x:Key="ThicknessConverter" />
    <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxCaretBrush}" />
        <Setter Property="BorderThickness" Value="0.7" />
        <Setter Property="SelectionOpacity" Value="0.2" />
        <Setter Property="Height" Value="19" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="ApplicationCommands.Cut" />
                    <MenuItem Command="ApplicationCommands.Copy" />
                    <MenuItem Command="ApplicationCommands.Paste" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter=0}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter=1}"
                      x:Name="PART_ContentBorder">
                                <Grid>
                                    <ScrollViewer x:Name="PART_Watermark"
                              IsHitTestVisible="False"
                              Padding="{TemplateBinding Padding}"
                              Content="{TemplateBinding Tag}"
                              Opacity="0.5"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Visibility="Hidden" />
                                    <ScrollViewer x:Name="PART_ContentHost"
                              Padding="{TemplateBinding Padding}"
                              VerticalAlignment="Stretch" />
                                </Grid>
                            </Border>
                            <Border BorderBrush="#FFFFFF"
                      BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter=1}"
                      x:Name="Border" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.75" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="" />
                                <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_Watermark" Value="Visible" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.25" />
                            <Setter Property="Visibility" TargetName="PART_Watermark" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <AdornedElementPlaceholder x:Name="ErrorAdorner" />
                        <Border BorderBrush="{DynamicResource TextBoxValidationErrorBorderBrush}"
                    Background="{DynamicResource TextBoxValidationErrorBackgroundBrush}"
                    BorderThickness="0.7"
                    IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxFocusedBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxFocusedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ReadOnlyTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Foreground" Value="{DynamicResource ReadOnlyTextBoxForegroundBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ReadOnlyTextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ReadOnlyTextBoxBorderBrush}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsReadOnlyCaretVisible" Value="True" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ReadOnlyTextBoxBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ReadOnlyTextBoxBorderBrush}" />
                <Setter Property="Background" Value="{DynamicResource ReadOnlyTextBoxBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource ReadOnlyTextBoxDisabledBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ReadOnlyTextBoxDisabledBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>